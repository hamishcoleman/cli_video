#!/bin/bash

#
# Simple wrapper to allow simple watching of youtube videos
#

#
# TODO
# - store the URL somewhere (or make it easy to regenerate)
# - extract the Id from the URL param and look for a completed file without
#   hitting the internet (ls ~/.youtube/*$ID.*
#


DIR=~/.youtube
mkdir -p $DIR

LOGFILE=~/s/organizer/youtube.log.`hostname`

if [ -x ~/tmp/src/youtube-dl/youtube-dl ]; then
	# use the newer version
	DL=~/tmp/src/youtube-dl/youtube-dl
else
	DL=youtube-dl
fi

TEMPLATE="%(stitle)s-%(id)s.%(ext)s"
BASENAME=`$DL -o $TEMPLATE --get-filename "$1"`
FILE=$DIR/$BASENAME
S=$?
if [ $S -ne 0 ]; then
	echo ERROR
	exit
fi 

# Note this one down
mkdir -p `dirname $LOGFILE`
echo "`date --rfc-3339=seconds` $1 $BASENAME" >>$LOGFILE

#-o "%(stitle)s-%(id)s.%(ext)s"
#	-o $FILE \
#-w -c

$DL \
	--ignore-errors \
	--max-quality=18 \
	--quiet \
	--console-title \
	-o $FILE \
	--continue \
	"$1" &

echo Wait for file ${FILE}.part
while [ ! -s ${FILE}.part -a ! -s ${FILE} ]; do
	sleep 1
done

echo Wait for size
BIG=0
while [ $BIG -eq 0 -a ! -e ${FILE} ]; do
	if find ${FILE}.part -size +1M | grep ${FILE}.part >/dev/null; then
		BIG=1
	fi
done

# Race here between the *.part having the right size and finishing..

mplayer ${FILE}*

echo $FILE
